---
title: "Grupowanie"
format: html
---

# Wczytanie danych

```{r}
library(tidyverse)

klienci <- read_csv("data/klienci.csv")
```


```{r}
ggplot(klienci, aes(x=wiek, y=roczny_dochod)) +
  geom_point()
```


```{r}
ggplot(klienci, aes(x=wiek, y=wskaznik_wydatkow)) +
  geom_point()
```

```{r}
ggplot(klienci, aes(x=wskaznik_wydatkow, y=roczny_dochod)) +
  geom_point()
```

# Normalizacja

```{r}
klienci_z <- klienci %>% 
  select(roczny_dochod, wskaznik_wydatkow) %>% 
  scale()
```

# Metoda k-średnich

```{r}
grupowanie1 <- kmeans(x = klienci_z, centers = 5)

klienci$grupy1 <- as.factor(grupowanie1$cluster)

ggplot(klienci, aes(x=wskaznik_wydatkow, y=roczny_dochod, color=grupy1)) +
  geom_point()
```

```{r}
library(ClusterR)

Optimal_Clusters_KMeans(data = klienci_z, max_clusters = 10, criterion = "WCSSE")
```

```{r}
grupowanie2 <- KMeans_rcpp(data = klienci_z, clusters = 5)

klienci$grupy2 <- as.factor(grupowanie2$clusters)

ggplot(klienci, aes(x=wskaznik_wydatkow, y=roczny_dochod, color=grupy2)) +
  geom_point()
```

```{r}
klienci %>% 
  group_by(grupy2) %>% 
  summarise(n=n(),
            sredni_dochod=mean(roczny_dochod),
            srednie_wydatki=mean(wskaznik_wydatkow))
```

# Zadanie

```{r}
auta <- read_csv2("data/auta.csv")

auta_z <- auta %>% 
  select(pojemnosc:cena) %>% 
  scale()
Optimal_Clusters_KMeans(data = auta_z, max_clusters = 15, criterion = "WCSSE")
```

```{r}
auta_grupy <- KMeans_rcpp(data = auta_z, clusters = 3)
auta$grupy <- as.factor(auta_grupy$clusters)
auta %>% 
  group_by(grupy) %>% 
  summarise_at(vars(pojemnosc:cena), mean)
```

# Metoda hierarchiczna

```{r}
macierz_odleglosci <- dist(klienci_z)

dendrogram <- hclust(d = macierz_odleglosci, method = "ward.D2")

plot(dendrogram)
```

```{r}
grupowanie3 <- cutree(tree = dendrogram, k = 5)

klienci$grupy3 <- as.factor(grupowanie3)

ggplot(klienci, aes(x=wskaznik_wydatkow, y=roczny_dochod, color=grupy3)) +
  geom_point()
```

```{r}
table(klienci$grupy2, klienci$grupy3)
```

```{r}
klienci_long <- klienci %>% 
  pivot_longer(grupy2:grupy3)

ggplot(klienci_long, aes(x=wskaznik_wydatkow, y=roczny_dochod, color=value)) +
  geom_point() +
  facet_wrap(~ name)
```

# Zadanie

```{r}
rownames(auta_z) <- auta$model

auta_macierz_odleglosci <- dist(auta_z)

auta_dendrogram <- hclust(d = auta_macierz_odleglosci, method = "ward.D2")

plot(auta_dendrogram)
```

```{r}
auta$grupy_hc <- as.factor(cutree(tree = auta_dendrogram, k = 3))

table(auta$grupy, auta$grupy_hc)
```

```{r}
library(ggdendro)

ggdendrogram(data = auta_dendrogram, rotate = T)
```

# Redukcja wymiarów

```{r}
library(factoextra)

auta <- auta %>% 
  mutate(model_nr = str_c(nr,model,sep=" "))

auta_z <- auta %>% 
  select(pojemnosc:cena) %>% 
  scale()

rownames(auta_z) <- auta$model_nr

auta_kmeans <- kmeans(x = auta_z, centers = 3)

fviz_cluster(auta_kmeans, data = auta_z)
```

```{r}
library(umap)

auta_umap <- umap(auta_z)

auta_umap_grupy <- as.data.frame(auta_umap$layout)
auta_umap_grupy$grupy <- auta$grupy
auta_umap_grupy$model <- rownames(auta_umap_grupy)

ggplot(auta_umap_grupy, aes(x=V1, y=V2, color=grupy)) +
  geom_point() +
  # geom_label(aes(label=model))
  ggrepel::geom_label_repel(aes(label=model), size=3)
```

# Paradoks Simpsona

```{r}
library(palmerpenguins)

data("penguins")

ggplot(penguins, aes(x=flipper_length_mm, y=bill_depth_mm, color=species)) +
  geom_point() +
  geom_smooth(method = "lm")
```

